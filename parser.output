Terminals which are not used

   TDOT


State 10 conflicts: 2 shift/reduce
State 13 conflicts: 1 shift/reduce
State 19 conflicts: 1 shift/reduce
State 32 conflicts: 10 shift/reduce
State 37 conflicts: 10 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmts

    2 stmts: stmt
    3      | stmts stmt

    4 stmt: var_decl
    5     | func_decl
    6     | expr

    7 block: TLBRACE stmts TRBRACE
    8      | TLBRACE TRBRACE

    9 var_decl: ident ident
   10         | ident ident TEQUAL expr

   11 func_decl: ident ident TLPAREN func_decl_args TRPAREN block

   12 func_decl_args: /* empty */
   13               | var_decl
   14               | func_decl_args TCOMMA var_decl

   15 ident: TIDENTIFIER

   16 numeric: TINTEGER
   17        | TDOUBLE

   18 expr: ident TEQUAL expr
   19     | ident TLPAREN call_args TRPAREN
   20     | ident
   21     | numeric
   22     | expr comparison expr
   23     | TLPAREN expr TRPAREN

   24 call_args: /* empty */
   25          | expr
   26          | call_args TCOMMA expr

   27 comparison: TCEQ
   28           | TCNE
   29           | TCLT
   30           | TCLE
   31           | TCGT
   32           | TCGE
   33           | TPLUS
   34           | TMINUS
   35           | TMUL
   36           | TDIV


Terminals, with rules where they appear

$end (0) 0
error (256)
TIDENTIFIER (258) 15
TINTEGER (259) 16
TDOUBLE (260) 17
TCEQ (261) 27
TCNE (262) 28
TCLT (263) 29
TCLE (264) 30
TCGT (265) 31
TCGE (266) 32
TEQUAL (267) 10 18
TLPAREN (268) 11 19 23
TRPAREN (269) 11 19 23
TLBRACE (270) 7 8
TRBRACE (271) 7 8
TCOMMA (272) 14 26
TDOT (273)
TPLUS (274) 33
TMINUS (275) 34
TMUL (276) 35
TDIV (277) 36


Nonterminals, with rules where they appear

$accept (23)
    on left: 0
program (24)
    on left: 1, on right: 0
stmts (25)
    on left: 2 3, on right: 1 3 7
stmt (26)
    on left: 4 5 6, on right: 2 3
block (27)
    on left: 7 8, on right: 11
var_decl (28)
    on left: 9 10, on right: 4 13 14
func_decl (29)
    on left: 11, on right: 5
func_decl_args (30)
    on left: 12 13 14, on right: 11 14
ident (31)
    on left: 15, on right: 9 10 11 18 19 20
numeric (32)
    on left: 16 17, on right: 21
expr (33)
    on left: 18 19 20 21 22 23, on right: 6 10 18 22 23 25 26
call_args (34)
    on left: 24 25 26, on right: 19 26
comparison (35)
    on left: 27 28 29 30 31 32 33 34 35 36, on right: 22


state 0

    0 $accept: . program $end

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 2
    TDOUBLE      shift, and go to state 3
    TLPAREN      shift, and go to state 4

    program    go to state 5
    stmts      go to state 6
    stmt       go to state 7
    var_decl   go to state 8
    func_decl  go to state 9
    ident      go to state 10
    numeric    go to state 11
    expr       go to state 12


state 1

   15 ident: TIDENTIFIER .

    $default  reduce using rule 15 (ident)


state 2

   16 numeric: TINTEGER .

    $default  reduce using rule 16 (numeric)


state 3

   17 numeric: TDOUBLE .

    $default  reduce using rule 17 (numeric)


state 4

   23 expr: TLPAREN . expr TRPAREN

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 2
    TDOUBLE      shift, and go to state 3
    TLPAREN      shift, and go to state 4

    ident    go to state 13
    numeric  go to state 11
    expr     go to state 14


state 5

    0 $accept: program . $end

    $end  shift, and go to state 15


state 6

    1 program: stmts .
    3 stmts: stmts . stmt

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 2
    TDOUBLE      shift, and go to state 3
    TLPAREN      shift, and go to state 4

    $default  reduce using rule 1 (program)

    stmt       go to state 16
    var_decl   go to state 8
    func_decl  go to state 9
    ident      go to state 10
    numeric    go to state 11
    expr       go to state 12


state 7

    2 stmts: stmt .

    $default  reduce using rule 2 (stmts)


state 8

    4 stmt: var_decl .

    $default  reduce using rule 4 (stmt)


state 9

    5 stmt: func_decl .

    $default  reduce using rule 5 (stmt)


state 10

    9 var_decl: ident . ident
   10         | ident . ident TEQUAL expr
   11 func_decl: ident . ident TLPAREN func_decl_args TRPAREN block
   18 expr: ident . TEQUAL expr
   19     | ident . TLPAREN call_args TRPAREN
   20     | ident .

    TIDENTIFIER  shift, and go to state 1
    TEQUAL       shift, and go to state 17
    TLPAREN      shift, and go to state 18

    TIDENTIFIER  [reduce using rule 20 (expr)]
    TLPAREN      [reduce using rule 20 (expr)]
    $default     reduce using rule 20 (expr)

    ident  go to state 19


state 11

   21 expr: numeric .

    $default  reduce using rule 21 (expr)


state 12

    6 stmt: expr .
   22 expr: expr . comparison expr

    TCEQ    shift, and go to state 20
    TCNE    shift, and go to state 21
    TCLT    shift, and go to state 22
    TCLE    shift, and go to state 23
    TCGT    shift, and go to state 24
    TCGE    shift, and go to state 25
    TPLUS   shift, and go to state 26
    TMINUS  shift, and go to state 27
    TMUL    shift, and go to state 28
    TDIV    shift, and go to state 29

    $default  reduce using rule 6 (stmt)

    comparison  go to state 30


state 13

   18 expr: ident . TEQUAL expr
   19     | ident . TLPAREN call_args TRPAREN
   20     | ident .

    TEQUAL   shift, and go to state 17
    TLPAREN  shift, and go to state 18

    TLPAREN   [reduce using rule 20 (expr)]
    $default  reduce using rule 20 (expr)


state 14

   22 expr: expr . comparison expr
   23     | TLPAREN expr . TRPAREN

    TCEQ     shift, and go to state 20
    TCNE     shift, and go to state 21
    TCLT     shift, and go to state 22
    TCLE     shift, and go to state 23
    TCGT     shift, and go to state 24
    TCGE     shift, and go to state 25
    TRPAREN  shift, and go to state 31
    TPLUS    shift, and go to state 26
    TMINUS   shift, and go to state 27
    TMUL     shift, and go to state 28
    TDIV     shift, and go to state 29

    comparison  go to state 30


state 15

    0 $accept: program $end .

    $default  accept


state 16

    3 stmts: stmts stmt .

    $default  reduce using rule 3 (stmts)


state 17

   18 expr: ident TEQUAL . expr

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 2
    TDOUBLE      shift, and go to state 3
    TLPAREN      shift, and go to state 4

    ident    go to state 13
    numeric  go to state 11
    expr     go to state 32


state 18

   19 expr: ident TLPAREN . call_args TRPAREN

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 2
    TDOUBLE      shift, and go to state 3
    TLPAREN      shift, and go to state 4

    $default  reduce using rule 24 (call_args)

    ident      go to state 13
    numeric    go to state 11
    expr       go to state 33
    call_args  go to state 34


state 19

    9 var_decl: ident ident .
   10         | ident ident . TEQUAL expr
   11 func_decl: ident ident . TLPAREN func_decl_args TRPAREN block

    TEQUAL   shift, and go to state 35
    TLPAREN  shift, and go to state 36

    TLPAREN   [reduce using rule 9 (var_decl)]
    $default  reduce using rule 9 (var_decl)


state 20

   27 comparison: TCEQ .

    $default  reduce using rule 27 (comparison)


state 21

   28 comparison: TCNE .

    $default  reduce using rule 28 (comparison)


state 22

   29 comparison: TCLT .

    $default  reduce using rule 29 (comparison)


state 23

   30 comparison: TCLE .

    $default  reduce using rule 30 (comparison)


state 24

   31 comparison: TCGT .

    $default  reduce using rule 31 (comparison)


state 25

   32 comparison: TCGE .

    $default  reduce using rule 32 (comparison)


state 26

   33 comparison: TPLUS .

    $default  reduce using rule 33 (comparison)


state 27

   34 comparison: TMINUS .

    $default  reduce using rule 34 (comparison)


state 28

   35 comparison: TMUL .

    $default  reduce using rule 35 (comparison)


state 29

   36 comparison: TDIV .

    $default  reduce using rule 36 (comparison)


state 30

   22 expr: expr comparison . expr

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 2
    TDOUBLE      shift, and go to state 3
    TLPAREN      shift, and go to state 4

    ident    go to state 13
    numeric  go to state 11
    expr     go to state 37


state 31

   23 expr: TLPAREN expr TRPAREN .

    $default  reduce using rule 23 (expr)


state 32

   18 expr: ident TEQUAL expr .
   22     | expr . comparison expr

    TCEQ    shift, and go to state 20
    TCNE    shift, and go to state 21
    TCLT    shift, and go to state 22
    TCLE    shift, and go to state 23
    TCGT    shift, and go to state 24
    TCGE    shift, and go to state 25
    TPLUS   shift, and go to state 26
    TMINUS  shift, and go to state 27
    TMUL    shift, and go to state 28
    TDIV    shift, and go to state 29

    TCEQ      [reduce using rule 18 (expr)]
    TCNE      [reduce using rule 18 (expr)]
    TCLT      [reduce using rule 18 (expr)]
    TCLE      [reduce using rule 18 (expr)]
    TCGT      [reduce using rule 18 (expr)]
    TCGE      [reduce using rule 18 (expr)]
    TPLUS     [reduce using rule 18 (expr)]
    TMINUS    [reduce using rule 18 (expr)]
    TMUL      [reduce using rule 18 (expr)]
    TDIV      [reduce using rule 18 (expr)]
    $default  reduce using rule 18 (expr)

    comparison  go to state 30


state 33

   22 expr: expr . comparison expr
   25 call_args: expr .

    TCEQ    shift, and go to state 20
    TCNE    shift, and go to state 21
    TCLT    shift, and go to state 22
    TCLE    shift, and go to state 23
    TCGT    shift, and go to state 24
    TCGE    shift, and go to state 25
    TPLUS   shift, and go to state 26
    TMINUS  shift, and go to state 27
    TMUL    shift, and go to state 28
    TDIV    shift, and go to state 29

    $default  reduce using rule 25 (call_args)

    comparison  go to state 30


state 34

   19 expr: ident TLPAREN call_args . TRPAREN
   26 call_args: call_args . TCOMMA expr

    TRPAREN  shift, and go to state 38
    TCOMMA   shift, and go to state 39


state 35

   10 var_decl: ident ident TEQUAL . expr

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 2
    TDOUBLE      shift, and go to state 3
    TLPAREN      shift, and go to state 4

    ident    go to state 13
    numeric  go to state 11
    expr     go to state 40


state 36

   11 func_decl: ident ident TLPAREN . func_decl_args TRPAREN block

    TIDENTIFIER  shift, and go to state 1

    $default  reduce using rule 12 (func_decl_args)

    var_decl        go to state 41
    func_decl_args  go to state 42
    ident           go to state 43


state 37

   22 expr: expr . comparison expr
   22     | expr comparison expr .

    TCEQ    shift, and go to state 20
    TCNE    shift, and go to state 21
    TCLT    shift, and go to state 22
    TCLE    shift, and go to state 23
    TCGT    shift, and go to state 24
    TCGE    shift, and go to state 25
    TPLUS   shift, and go to state 26
    TMINUS  shift, and go to state 27
    TMUL    shift, and go to state 28
    TDIV    shift, and go to state 29

    TCEQ      [reduce using rule 22 (expr)]
    TCNE      [reduce using rule 22 (expr)]
    TCLT      [reduce using rule 22 (expr)]
    TCLE      [reduce using rule 22 (expr)]
    TCGT      [reduce using rule 22 (expr)]
    TCGE      [reduce using rule 22 (expr)]
    TPLUS     [reduce using rule 22 (expr)]
    TMINUS    [reduce using rule 22 (expr)]
    TMUL      [reduce using rule 22 (expr)]
    TDIV      [reduce using rule 22 (expr)]
    $default  reduce using rule 22 (expr)

    comparison  go to state 30


state 38

   19 expr: ident TLPAREN call_args TRPAREN .

    $default  reduce using rule 19 (expr)


state 39

   26 call_args: call_args TCOMMA . expr

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 2
    TDOUBLE      shift, and go to state 3
    TLPAREN      shift, and go to state 4

    ident    go to state 13
    numeric  go to state 11
    expr     go to state 44


state 40

   10 var_decl: ident ident TEQUAL expr .
   22 expr: expr . comparison expr

    TCEQ    shift, and go to state 20
    TCNE    shift, and go to state 21
    TCLT    shift, and go to state 22
    TCLE    shift, and go to state 23
    TCGT    shift, and go to state 24
    TCGE    shift, and go to state 25
    TPLUS   shift, and go to state 26
    TMINUS  shift, and go to state 27
    TMUL    shift, and go to state 28
    TDIV    shift, and go to state 29

    $default  reduce using rule 10 (var_decl)

    comparison  go to state 30


state 41

   13 func_decl_args: var_decl .

    $default  reduce using rule 13 (func_decl_args)


state 42

   11 func_decl: ident ident TLPAREN func_decl_args . TRPAREN block
   14 func_decl_args: func_decl_args . TCOMMA var_decl

    TRPAREN  shift, and go to state 45
    TCOMMA   shift, and go to state 46


state 43

    9 var_decl: ident . ident
   10         | ident . ident TEQUAL expr

    TIDENTIFIER  shift, and go to state 1

    ident  go to state 47


state 44

   22 expr: expr . comparison expr
   26 call_args: call_args TCOMMA expr .

    TCEQ    shift, and go to state 20
    TCNE    shift, and go to state 21
    TCLT    shift, and go to state 22
    TCLE    shift, and go to state 23
    TCGT    shift, and go to state 24
    TCGE    shift, and go to state 25
    TPLUS   shift, and go to state 26
    TMINUS  shift, and go to state 27
    TMUL    shift, and go to state 28
    TDIV    shift, and go to state 29

    $default  reduce using rule 26 (call_args)

    comparison  go to state 30


state 45

   11 func_decl: ident ident TLPAREN func_decl_args TRPAREN . block

    TLBRACE  shift, and go to state 48

    block  go to state 49


state 46

   14 func_decl_args: func_decl_args TCOMMA . var_decl

    TIDENTIFIER  shift, and go to state 1

    var_decl  go to state 50
    ident     go to state 43


state 47

    9 var_decl: ident ident .
   10         | ident ident . TEQUAL expr

    TEQUAL  shift, and go to state 35

    $default  reduce using rule 9 (var_decl)


state 48

    7 block: TLBRACE . stmts TRBRACE
    8      | TLBRACE . TRBRACE

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 2
    TDOUBLE      shift, and go to state 3
    TLPAREN      shift, and go to state 4
    TRBRACE      shift, and go to state 51

    stmts      go to state 52
    stmt       go to state 7
    var_decl   go to state 8
    func_decl  go to state 9
    ident      go to state 10
    numeric    go to state 11
    expr       go to state 12


state 49

   11 func_decl: ident ident TLPAREN func_decl_args TRPAREN block .

    $default  reduce using rule 11 (func_decl)


state 50

   14 func_decl_args: func_decl_args TCOMMA var_decl .

    $default  reduce using rule 14 (func_decl_args)


state 51

    8 block: TLBRACE TRBRACE .

    $default  reduce using rule 8 (block)


state 52

    3 stmts: stmts . stmt
    7 block: TLBRACE stmts . TRBRACE

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 2
    TDOUBLE      shift, and go to state 3
    TLPAREN      shift, and go to state 4
    TRBRACE      shift, and go to state 53

    stmt       go to state 16
    var_decl   go to state 8
    func_decl  go to state 9
    ident      go to state 10
    numeric    go to state 11
    expr       go to state 12


state 53

    7 block: TLBRACE stmts TRBRACE .

    $default  reduce using rule 7 (block)
